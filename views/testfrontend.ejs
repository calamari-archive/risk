<!DOCTYPE html>
<html>
  <head>
    <title>Test the frontend stuff</title>
    <script src="http://code.jquery.com/jquery-latest.js"></script>
    <script src="http://documentcloud.github.com/underscore/underscore-min.js"></script>
    <script src="http://documentcloud.github.com/backbone/backbone-min.js"></script>
    <script src="http://github.com/DmitryBaranovskiy/raphael/raw/master/raphael.js"></script>

    <script src="/js/country.js"></script>
    <script src="/js/continent.js"></script>
    <script src="/js/player.js"></script>
    <script src="/js/risk_game.js"></script>

    <script src="/js/frontend_controller.js"></script>
    <style>
      body {
        margin: 0;
        padding: 0;
      }
      #canvas {
        background: #fdfdfd;
      }
      #names-chooser {
        border: 1px solid #333;
        padding: 10px 20px;
        position: absolute;
        top: 50px;
        left: 46%;
      }
      .p1color {
        color: red;
      }
      .p2color {
        color: green;
      }
      .p3color {
        color: blue;
      }
      .splash-message {
        border: 1px solid #333;
        -webkit-border-radius: 6px;
        padding: 10px 20px;
        position: absolute;
        top: 50px;
        left: 46%;
        text-align: center;
      }
      #active-player-bar {
        position: absolute;
        top: 5px;
        right: 16%;
      }
    </style>
  </head>
  <body>
    <div id="canvas"></div>
    <div id="active-player-bar">Actual Player: <span id="active-player"></span>
      <ul class="assignment-stage">
        <li><a class="next-player" href="#">Next Player</a></li>
      </ul>
      <ul class="play-stage">
        <li><a id="end-attack-phase" href="#">End Attack Phase</a></li>
        <li><a id="next-player" href="#">Next Player</a></li>
      </ul>
    </div>

    <div id="names-chooser">
      <p class="p1color">
        <label for="player1-name">Player 1:</label>
        <input type="text" id="player1-name" name="player1" value="Bob">
      </p>
      <p class="p2color">
        <label for="player2-name">Player 2:</label>
        <input type="text" id="player2-name" name="player2" value="Charley">
      </p>
      <p class="p3color">
        <label for="player3-name">Player 3:</label>
        <input type="text" id="player3-name" name="player3" value="Louis">
      </p>
      <button>Let's start the spectacle!</button>
    </div>

    <div id="start-screen" class="splash-message" style="display: none">
      <h2>Phase 1: Choose your countries</h2>
      <p>The first to start is: <span style="color: #{color}">#{player}</span>.</p>

      <a href="#" class="close">Go go go...</a>
    </div>

    <script>
    $(document).ready(function() {
      var Config = {
        parseCountries: function(countryString) {
          var arr = countryString.split('\n'),
              name = null,
              vectors,
              connections,
              countries = [];
          for (var i=0,l=arr.length; i<l; ++i) {
            if (arr[i] != '') {
              if (name === null) {
                name = arr[i].split(';');
                connections = name[1].split(',');
                name = name[0];
              } else {
                vectors = arr[i].split(';');
                for (var j=0,m=vectors.length; j<m; ++j) {
                  vectors[j] = vectors[j].split(',');
                }
                countries.push(new Country(name, {
                  vectors: vectors,
                  connections: connections
                }));
                name = null;
              }
            }
          }
          return countries;
        },
        load: function(cb) {
          cb({
            countries: this.parseCountries("alaska;northwest terretory,alberia\n18,109;23,99;26,86;49,83;55,77;40,76;42,69;57,72;65,67;56,60;95,54;141,58;97,98;73,90;60,96;45,94;18,109\nnorthwest terretory;alaska,alberia,ontario\n152,61;169,61;179,53;193,55;216,66;229,65;234,74;244,63;261,67;270,71;282,62;276,52;289,49;298,65;310,60;318,66;304,72;287,73;248,98;100,97;140,58;152,61\nalberia;alaska,ontario,northwest terretory\n116,144;105,125;111,112;101,99;219,98;194,144;116,144\nontario;eastern canada,northwest terretory,alberia\n228,148;218,143;194,144;217,97;247,99;250,112;274,118;275,134;267,153;279,160;255,171;228,148\neastern canada;ontario\n282,132;284,121;297,114;303,107;299,100;307,86;332,88;336,102;345,96;352,111;351,120;361,120;363,129;343,134;320,136;309,145;325,145;330,156;320,161;311,159;309,149;303,149;294,158;280,159;269,154;275,134;282,132")
          });
          var x = $.get('/config.json', function(transport) {
            console.log(transport);
          }, function(transport) {
            console.log(transport);
          });
        }
      };

      function SplashScreen(id, data) {
        var container = $('#' + id);
        var html = container.html();
        for(var i in data) {
          html = html.replace('#{' + i + '}', data[i]);
        }
        container.html(html).show();
        $(".close").click(function(event) {
          container.hide();
          event.preventDefault();
        });
      }

      function showStartScreen(player) {
        new SplashScreen('start-screen', { player: player.name, color: player.color });
      }

      function updatePlayer(player) {
        $('#active-player').html(player.name).css({ color: player.color });
      }

      $('.assignment-stage, .play-stage').hide();
      Config.load(function(config) {
        var COLORS = ['red', 'green', 'blue'];
//        var game;
        var playerColors = {};
        $("#names-chooser button").click(function() {
          // initially hide all that stuff
          game = new RiskGame({
            players:          $("#names-chooser input").map(function(i, element) {
              playerColors[element.value] = COLORS[i];
              return element.value;
            }),
            countries:        config.countries,
            assignCountries:  false
          });
          $('.assignment-stage').show();
          $('#names-chooser').hide();
          
          function startObservers() {
            $(game).bind('nextStage', function(event, data) {
              $('.assignment-stage').hide();
              $('.play-stage').show();
            });
            $('.next-player').live('click', function(event) {
              event.preventDefault();
            });
          }
          
          startObservers();

          $.each(game.getPlayers(), function(i, player) {
            player.color = COLORS[i];
          });

          showStartScreen(game.actualPlayer());
          updatePlayer(game.actualPlayer());

          // all this could be in a GameController?
          var selectedCountry = null,
              countries = {};
          var controller = new FrontendController('canvas', {
            fullsize: true,
            countries: config.countries
          });

          // index all countries for faster access
          $.each(config.countries, function(i, country) {
            countries[country.id] = country;
          });

          controller.addEventListener('countryClick', function(event) {
            if (selectedCountry) {
              selectedCountry.element.deselect();
              $.each(selectedCountry.getConnectedCountries(), function(i, name) {
                countries[name].element.deselect();
              });
            }
            if (selectedCountry != event.country) {
              event.country.element.select();
              selectedCountry = event.country;
              $.each(selectedCountry.getConnectedCountries(), function(i, name) {
                countries[name].element.select("green");
              });
            } else {
              selectedCountry = null;
            }
          });
          controller.addEventListener('countryMouseOver', function(event) {
            event.target.highlight();
          });
          controller.addEventListener('countryMouseOut', function(event) {
            event.target.removeHighlight();
          });
        });
      });
    });
    </script>
  </body>
</html>
